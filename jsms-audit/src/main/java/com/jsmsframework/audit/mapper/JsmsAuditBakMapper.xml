<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsmsframework.audit.mapper.JsmsAuditBakMapper">
     
        
    <resultMap id="rowMapper" type="com.jsmsframework.audit.entity.JsmsAuditBak">
        <result property="auditid" jdbcType="BIGINT" column="auditid"/>
        <result property="createtime" jdbcType="TIMESTAMP" column="createtime"/>
        <result property="clientid" jdbcType="VARCHAR" column="clientid"/>
        <result property="username" jdbcType="VARCHAR" column="username"/>
        <result property="content" jdbcType="VARCHAR" column="content"/>
        <result property="sign" jdbcType="VARCHAR" column="sign"/>
        <result property="smstype" jdbcType="INTEGER" column="smstype"/>
        <result property="md5" jdbcType="VARCHAR" column="md5"/>
        <result property="status" jdbcType="INTEGER" column="status"/>
        <result property="sendnum" jdbcType="INTEGER" column="sendnum"/>
        <result property="lastSendtime" jdbcType="TIMESTAMP" column="last_sendtime"/>
        <result property="paytype" jdbcType="INTEGER" column="paytype"/>
        <result property="removeflag" jdbcType="INTEGER" column="removeflag"/>
        <result property="readedflag" jdbcType="INTEGER" column="readedflag"/>
        <result property="transferperson" jdbcType="VARCHAR" column="transferperson"/>
        <result property="transfertime" jdbcType="TIMESTAMP" column="transfertime"/>
        <result property="auditperson" jdbcType="VARCHAR" column="auditperson"/>
        <result property="audittime" jdbcType="TIMESTAMP" column="audittime"/>
        <result property="optRemark" jdbcType="VARCHAR" column="opt_remark"/>
    </resultMap> 
     
    <sql id="BASE_COLUMN_LIST">
        auditid,
        createtime,
        clientid,
        username,
        content,
        sign,
        smstype,
        md5,
        status,
        sendnum,
        last_sendtime,
        paytype,
        removeflag,
        readedflag,
        transferperson,
        transfertime,
        auditperson,
        audittime,
        opt_remark
    </sql>

    <insert id="insert" parameterType="com.jsmsframework.audit.entity.JsmsAuditBak" >
        INSERT INTO t_sms_audit_bak 
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="auditid != null" >
                auditid,
            </if>
            <if test="createtime != null" >
                createtime,
            </if>
            <if test="clientid != null" >
                clientid,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="sign != null" >
                sign,
            </if>
            <if test="smstype != null" >
                smstype,
            </if>
            <if test="md5 != null" >
                md5,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="sendnum != null" >
                sendnum,
            </if>
            <if test="lastSendtime != null" >
                last_sendtime,
            </if>
            <if test="paytype != null" >
                paytype,
            </if>
            <if test="removeflag != null" >
                removeflag,
            </if>
            <if test="readedflag != null" >
                readedflag,
            </if>
            <if test="transferperson != null" >
                transferperson,
            </if>
            <if test="transfertime != null" >
                transfertime,
            </if>
            <if test="auditperson != null" >
                auditperson,
            </if>
            <if test="audittime != null" >
                audittime,
            </if>
            <if test="optRemark != null" >
                opt_remark
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
            <if test="auditid != null" >
                #{auditid},
            </if>
            <if test="createtime != null" >
                #{createtime},
            </if>
            <if test="clientid != null" >
                #{clientid},
            </if>
            <if test="username != null" >
                #{username},
            </if>
            <if test="content != null" >
                #{content},
            </if>
            <if test="sign != null" >
                #{sign},
            </if>
            <if test="smstype != null" >
                #{smstype},
            </if>
            <if test="md5 != null" >
                #{md5},
            </if>
            <if test="status != null" >
                #{status},
            </if>
            <if test="sendnum != null" >
                #{sendnum},
            </if>
            <if test="lastSendtime != null" >
                #{lastSendtime},
            </if>
            <if test="paytype != null" >
                #{paytype},
            </if>
            <if test="removeflag != null" >
                #{removeflag},
            </if>
            <if test="readedflag != null" >
                #{readedflag},
            </if>
            <if test="transferperson != null" >
                #{transferperson},
            </if>
            <if test="transfertime != null" >
                #{transfertime},
            </if>
            <if test="auditperson != null" >
                #{auditperson},
            </if>
            <if test="audittime != null" >
                #{audittime},
            </if>
            <if test="optRemark != null" >
                #{optRemark}
            </if>
        </trim>
    </insert>

    <insert id="insertFromAudit" parameterType="com.jsmsframework.audit.entity.JsmsAudit" >
        INSERT INTO t_sms_audit_bak (
            auditid,
            createtime,
            clientid,
            username,
            content,
            sign,
            smstype,
            md5,
            status,
            sendnum,
            last_sendtime,
            paytype,
            removeflag,
            readedflag,
            transferperson,
            transfertime,
            auditperson,
            audittime,
            opt_remark
        ) VALUES (
            #{auditid},
            #{createtime},
            #{clientid},
            #{username},
            #{content},
            #{sign},
            #{smstype},
            #{md5},
            #{status},
            #{sendnum},
            #{lastSendtime},
            #{paytype},
            #{removeflag},
            #{readedflag},
            #{transferperson},
            #{transfertime},
            #{auditperson},
            #{audittime},
            #{optRemark}
        )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List" >
        INSERT INTO t_sms_audit_bak (
            auditid,
            createtime,
            clientid,
            username,
            content,
            sign,
            smstype,
            md5,
            status,
            sendnum,
            last_sendtime,
            paytype,
            removeflag,
            readedflag,
            transferperson,
            transfertime,
            auditperson,
            audittime,
            opt_remark
        )VALUES
        <foreach collection="list" item="item" index="index" separator="," >  
            (
                #{item.auditid},
                #{item.createtime},
                #{item.clientid},
                #{item.username},
                #{item.content},
                #{item.sign},
                #{item.smstype},
                #{item.md5},
                #{item.status},
                #{item.sendnum},
                #{item.lastSendtime},
                #{item.paytype},
                #{item.removeflag},
                #{item.readedflag},
                #{item.transferperson},
                #{item.transfertime},
                #{item.auditperson},
                #{item.audittime},
                #{item.optRemark}
            )
        </foreach>
    </insert>

    <insert id="insertBatchFromAudit" parameterType="java.util.List" >
        INSERT INTO t_sms_audit_bak (
            auditid,
            createtime,
            clientid,
            username,
            content,
            sign,
            smstype,
            md5,
            status,
            sendnum,
            last_sendtime,
            paytype,
            removeflag,
            readedflag,
            transferperson,
            transfertime,
            auditperson,
            audittime,
            opt_remark
        )VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (
                #{item.auditid},
                #{item.createtime},
                #{item.clientid},
                #{item.username},
                #{item.content},
                #{item.sign},
                #{item.smstype},
                #{item.md5},
                #{item.status},
                #{item.sendnum},
                #{item.lastSendtime},
                #{item.paytype},
                #{item.removeflag},
                #{item.readedflag},
                #{item.transferperson},
                #{item.transfertime},
                #{item.auditperson},
                #{item.audittime},
                #{item.optRemark}
            )
        </foreach>
    </insert>
    
    <delete id="delete">
        DELETE FROM t_sms_audit_bak WHERE auditid = #{auditid}
    </delete>

    <update id="update" parameterType="com.jsmsframework.audit.entity.JsmsAuditBak" >
        UPDATE t_sms_audit_bak SET 
            createtime=#{createtime},
            clientid=#{clientid},
            username=#{username},
            content=#{content},
            sign=#{sign},
            smstype=#{smstype},
            md5=#{md5},
            status=#{status},
            sendnum=#{sendnum},
            last_sendtime=#{lastSendtime},
            paytype=#{paytype},
            removeflag=#{removeflag},
            readedflag=#{readedflag},
            transferperson=#{transferperson},
            transfertime=#{transfertime},
            auditperson=#{auditperson},
            audittime=#{audittime},
            opt_remark=#{optRemark}
        WHERE 
            auditid = #{auditid} 
    </update>
    
 
    
    <update id="updateSelective" parameterType="com.jsmsframework.audit.entity.JsmsAuditBak" >
        UPDATE t_sms_audit_bak 
            <set>
                <if test="createtime != null and createtime != ''">
                    createtime = #{createtime},
                </if>
                <if test="clientid != null and clientid != ''">
                    clientid = #{clientid},
                </if>
                <if test="username != null and username != ''">
                    username = #{username},
                </if>
                <if test="content != null and content != ''">
                    content = #{content},
                </if>
                <if test="sign != null and sign != ''">
                    sign = #{sign},
                </if>
                <if test="smstype != null and smstype != ''">
                    smstype = #{smstype},
                </if>
                <if test="md5 != null and md5 != ''">
                    md5 = #{md5},
                </if>
                <if test="status != null and status != ''">
                    status = #{status},
                </if>
                <if test="sendnum != null and sendnum != ''">
                    sendnum = #{sendnum},
                </if>
                <if test="lastSendtime != null and lastSendtime != ''">
                    last_sendtime = #{lastSendtime},
                </if>
                <if test="paytype != null and paytype != ''">
                    paytype = #{paytype},
                </if>
                <if test="removeflag != null and removeflag != ''">
                    removeflag = #{removeflag},
                </if>
                <if test="readedflag != null and readedflag != ''">
                    readedflag = #{readedflag},
                </if>
                <if test="transferperson != null and transferperson != ''">
                    transferperson = #{transferperson},
                </if>
                <if test="transfertime != null and transfertime != ''">
                    transfertime = #{transfertime},
                </if>
                <if test="auditperson != null and auditperson != ''">
                    auditperson = #{auditperson},
                </if>
                <if test="audittime != null and audittime != ''">
                    audittime = #{audittime},
                </if>
                <if test="optRemark != null and optRemark != ''">
                    opt_remark = #{optRemark}
                </if>
            </set>
        WHERE 
            auditid = #{auditid} 
    </update>

    <select id="getByAuditid" resultMap="rowMapper">
        SELECT 
            <include refid="BASE_COLUMN_LIST" />
        FROM t_sms_audit_bak
        WHERE 
            auditid = #{auditid}
    </select>

    <select id="queryList" resultMap="rowMapper">
        SELECT 
            <include refid="BASE_COLUMN_LIST" /> 
        FROM t_sms_audit_bak
        WHERE
        1 = 1
        <include refid="queryListCondition"/>


    </select>

    <sql id="queryListCondition">

            <if test="params.ishis!=null">
                and status !=0
            </if>
        <if test="params.auditid != null">
            and auditid in (#{params.auditid})
        </if>
        <if test="params.createtime != null">
            and createtime = #{params.createtime}
        </if>
        <if test="params.clientid != null and params.clientid != ''">
            and clientid LIKE CONCAT('%',#{params.clientid},'%')
        </if>
        <if test="params.username != null and params.username != ''">
            and username = #{params.username}
        </if>
        <if test="params.content != null and params.content != ''">
            and content LIKE CONCAT('%', #{params.content} ,'%')
        </if>
        <if test="params.sign != null and params.sign != ''">
            and sign LIKE CONCAT('%',#{params.sign},'%')
        </if>
        <if test="params.smstype != null">
            and smstype = #{params.smstype}
        </if>
        <if test="params.md5 != null and params.md5 != ''">
            and md5 = #{params.md5}
        </if>
        <if test="params.status != null and params.status != ''">
            and status = #{params.status}
        </if>
        <if test="params.sendnum != null and params.sendnum != ''">
            and sendnum = #{params.sendnum}
        </if>
        <if test="params.lastSendtime != null and params.lastSendtime != ''">
            and last_sendtime = #{params.lastSendtime}
        </if>
        <if test="params.paytype != null">
            and paytype = #{params.paytype}
        </if>
        <if test="params.removeflag != null">
            and removeflag = #{params.removeflag}
        </if>
        <if test="params.readedflag != null">
            and readedflag = #{params.readedflag}
        </if>
        <if test="params.transferperson != null and params.transferperson.size > 0">
            and transferperson in
            <foreach item="item" index="index" collection="params.transferperson" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="params.transfertime != null and params.transfertime != ''">
            and transfertime = #{params.transfertime}
        </if>
        <if test="params.auditperson != null and params.auditperson.size > 0">
            and auditperson in
            <foreach item="item" index="index" collection="params.auditperson" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="params.audittime != null and params.audittime != ''">
            and audittime = #{params.audittime}
        </if>
        <if test="params.optRemark != null and params.optRemark != ''">
            and opt_remark = #{params.optRemark}
        </if>
        <!-- 历史审核时间条件-->
        <if test="params.hstart_time != null and params.hstart_time != ''">
            AND <![CDATA[ audittime >= #{params.hstart_time} ]]>
        </if>
        <if test="params.hend_time != null and params.hend_time != ''">
            AND <![CDATA[ audittime <= #{params.hend_time} ]]>
        </if>
    </sql>

    <select id="count" resultType="int">
        SELECT COUNT(0)
        FROM t_sms_audit_bak
        WHERE
        1 = 1
        <include refid="queryListCondition"/>

    </select>

    <select id="findRepeatList" resultMap="rowMapper">
        SELECT
          <include refid="BASE_COLUMN_LIST" />
        FROM t_sms_audit_bak
        GROUP BY auditid HAVING COUNT(auditid) > 1
        ORDER BY auditid
        LIMIT 2000
    </select>

    <!-- 批量删除 -->
    <delete id="batchDeleteAudit" parameterType="int">
        delete from t_sms_audit_bak where auditid in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>



    <select id="queryhisAll" resultType="map">
        SELECT
        createtime,
        clientid,
        content,
        sign,
        smstype,
        CASE smstype
        WHEN 0 THEN '通知'
        WHEN 4 THEN '验证码'
        WHEN 5 THEN '营销'
        WHEN 6 THEN '告警'
        WHEN 7 THEN 'USSD'
        WHEN 8 THEN '闪信'
        ELSE '-'
        END  AS smstypeName,
        status,
        CASE status
        WHEN 0 THEN '待审核'
        WHEN 1 THEN '审核通过'
        WHEN 2 THEN '审核不通过'
        WHEN 3 THEN '转审'
        ELSE '-'
        END AS statusName,
        sendnum,
        transferperson,
        transfertime,
        auditperson,
        CASE status
        WHEN  3 THEN ifNull((SELECT realname FROM t_sms_user WHERE id = transferperson),'-')
        WHEN  1 THEN ifNull((SELECT realname FROM t_sms_user WHERE id = auditperson),'-')
        WHEN  2 THEN ifNull((SELECT realname FROM t_sms_user WHERE id = auditperson),'-')
        ELSE '-'
        END AS auditpersonName,
        ifNull((SELECT realname FROM t_sms_user WHERE id = transferperson),'未知') AS transferpersonName,
        CASE status
        WHEN  2 THEN opt_remark
        ELSE '-'
        END  AS optRemark,
        audittime
        FROM t_sms_audit_bak
        WHERE
        1 = 1 AND status !=0
        <include refid="queryAllCondition"/>

        ORDER BY
        audittime DESC
    </select>
    <sql id="queryAllCondition">
        <if test="ishis!=null">
            and status !=0
        </if>
        <if test="auditid != null and auditid != ''">
            and auditid = #{auditid}
        </if>
        <if test="createtime != null and createtime != ''">
            and createtime = #{createtime}
        </if>
        <if test="clientid != null and clientid != ''">
            and clientid LIKE CONCAT('%',#{clientid},'%')
        </if>
        <if test="username != null and username != ''">
            and username = #{username}
        </if>
        <if test="content != null and content != ''">
            and content LIKE CONCAT('%', #{content} ,'%')
        </if>
        <if test="sign != null and sign != ''">
            and sign LIKE CONCAT('%',#{sign},'%')
        </if>
        <if test="smstype != null and smstype != ''">
            and smstype = #{smstype}
        </if>
        <if test="md5 != null and md5 != ''">
            and md5 = #{md5}
        </if>
        <if test="status != null and status != ''">
            and status = #{status}
        </if>
        <if test="sendnum != null and sendnum != ''">
            and sendnum = #{sendnum}
        </if>
        <if test="lastSendtime != null and lastSendtime != ''">
            and last_sendtime = #{lastSendtime}
        </if>
        <if test="paytype != null and paytype != ''">
            and paytype = #{paytype}
        </if>
        <if test="removeflag != null and removeflag != ''">
            and removeflag = #{removeflag}
        </if>
        <if test="readedflag != null and readedflag != ''">
            and readedflag = #{readedflag}
        </if>
        <if test="transferperson != null and transferperson.size > 0 ">
            and transferperson in
            <foreach item="item" index="index" collection="transferperson" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="transfertime != null and transfertime != ''">
            and transfertime = #{transfertime}
        </if>
        <if test="auditperson != null and auditperson.size > 0 ">
            and auditperson in
            <foreach item="item" index="index" collection="auditperson" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="audittime != null and audittime != ''">
            and audittime = #{audittime}
        </if>
        <if test="optRemark != null and optRemark != ''">
            and opt_remark = #{optRemark}
        </if>
        <!-- 历史审核时间条件-->
        <if test="start_time != null and start_time != ''">
            AND <![CDATA[ audittime >= #{start_time} ]]>
        </if>
        <if test="end_time != null and end_time != ''">
            AND <![CDATA[ audittime <= #{end_time} ]]>
        </if>
    </sql>





    <insert id="insertWithTableName">
        INSERT INTO ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="model.auditid != null" >
                auditid,
            </if>
            <if test="model.createtime != null" >
                createtime,
            </if>
            <if test="model.clientid != null" >
                clientid,
            </if>
            <if test="model.username != null" >
                username,
            </if>
            <if test="model.content != null" >
                content,
            </if>
            <if test="model.sign != null" >
                sign,
            </if>
            <if test="model.smstype != null" >
                smstype,
            </if>
            <if test="model.md5 != null" >
                md5,
            </if>
            <if test="model.status != null" >
                status,
            </if>
            <if test="model.sendnum != null" >
                sendnum,
            </if>
            <if test="model.lastSendtime != null" >
                last_sendtime,
            </if>
            <if test="model.paytype != null" >
                paytype,
            </if>
            <if test="model.removeflag != null" >
                removeflag,
            </if>
            <if test="model.readedflag != null" >
                readedflag,
            </if>
            <if test="model.transferperson != null" >
                transferperson,
            </if>
            <if test="model.transfertime != null" >
                transfertime,
            </if>
            <if test="model.auditperson != null" >
                auditperson,
            </if>
            <if test="model.audittime != null" >
                audittime,
            </if>
            <if test="model.optRemark != null" >
                opt_remark
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
            <if test="model.auditid != null" >
                #{model.auditid},
            </if>
            <if test="model.createtime != null" >
                #{model.createtime},
            </if>
            <if test="model.clientid != null" >
                #{model.clientid},
            </if>
            <if test="model.username != null" >
                #{model.username},
            </if>
            <if test="model.content != null" >
                #{model.content},
            </if>
            <if test="model.sign != null" >
                #{model.sign},
            </if>
            <if test="model.smstype != null" >
                #{model.smstype},
            </if>
            <if test="model.md5 != null" >
                #{model.md5},
            </if>
            <if test="model.status != null" >
                #{model.status},
            </if>
            <if test="model.sendnum != null" >
                #{model.sendnum},
            </if>
            <if test="model.lastSendtime != null" >
                #{model.lastSendtime},
            </if>
            <if test="model.paytype != null" >
                #{model.paytype},
            </if>
            <if test="model.removeflag != null" >
                #{model.removeflag},
            </if>
            <if test="model.readedflag != null" >
                #{model.readedflag},
            </if>
            <if test="model.transferperson != null" >
                #{model.transferperson},
            </if>
            <if test="model.transfertime != null" >
                #{model.transfertime},
            </if>
            <if test="model.auditperson != null" >
                #{model.auditperson},
            </if>
            <if test="model.audittime != null" >
                #{model.audittime},
            </if>
            <if test="model.optRemark != null" >
                #{model.optRemark}
            </if>
        </trim>
    </insert>
</mapper>

