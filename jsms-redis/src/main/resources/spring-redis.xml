<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

	<!--定义连接池的配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis_maxActive}" />
		<property name="maxIdle" value="${redis_maxIdle}" />
		<property name="maxWaitMillis" value="${redis_maxWait}" />
		<property name="testOnBorrow" value="${redis_testOnBorrow}" />
	</bean>

	<!--定义Redis的集群信息 -->
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<!-- 连接池的配置信息 -->
		<constructor-arg index="0" ref="poolConfig" />
		<!-- 主机信息 -->
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis_servers}" />
					<constructor-arg index="1" value="${redis_port}" />

				</bean>

			</list>
		</constructor-arg>
	</bean>

	<context:component-scan base-package="com.jsmsframework.redis" />

	<!--redis连接工厂 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" >
		<constructor-arg index="0" ref="poolConfig" />
		<constructor-arg index="1" value="${redis_servers}" type="java.lang.String"/>
		<constructor-arg index="2" value="${redis_port}" type="int" />
		<constructor-arg index="3" value="60000" type="int" />
	</bean>


	<!--redis操作模版,使用该对象可以操作redis
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		&lt;!&ndash;如果不配置Serializer，那么存储的时候缺省使用String，如果用User类型存储，那么会提示错误User can't cast to String！！  &ndash;&gt;
		<property name="keySerializer" >
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer" >
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
		</property>
		&lt;!&ndash;开启事务  &ndash;&gt;
		<property name="enableTransactionSupport" value="true"></property>
	</bean >


	<bean id="redisUtil" class="com.jsmsframework.redis.RedisUtils">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>-->
</beans>